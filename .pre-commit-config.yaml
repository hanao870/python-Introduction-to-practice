# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
# 参考サイト : https://dev.classmethod.jp/articles/python-git-pre-commit/
# 参考サイト : https://zenn.dev/yiskw713/articles/3c3b4022f3e3f22d276d
# 利用可能な hook 一覧 : https://pre-commit.com/hooks.html
repos:
# hookスクリプトが存在するリポジトリのリストを指定
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.2.0 # reposで指定されたリポジトリのリビジョンもしくはタグを指定
    hooks:  # 各hookスクリプトのIDを指定。リポジトリ内に存在するhookスクリプトのファイル名と一致(.pyは不要)するよう設定
      - id: check-added-large-files
      - id: check-toml
      - id: check-yaml
      - id: detect-private-key # 秘密鍵の有無をチェック
      - id: end-of-file-fixer # ファイルの末尾が改行かチェック
      # - id: no-commit-to-branch   # 特定のブランチに直接コミットできないようにする
      #   args: [--branch, master]  # どのブランチにコミットできないようにするかを設定できる. デフォルトは master/main
      # - id: check-json  # コメント付き json ではシンタックスエラーとなる
      # - id: pretty-format-json  # ckeck-json と合わせて使用する必要あり
      #   args: [--autofix] # json ファイルの自動フォーマット
  # isort
  - repo: https://github.com/pycqa/isort
    rev: 5.10.1
    hooks:
      - id: isort
        args: ["--profile", "black"]  # black のフォーマッタとの競合を避ける
  # black
  - repo: https://github.com/psf/black
    rev: 22.3.0
    hooks:
      - id: black # 記述方法は https://black.readthedocs.io/en/stable/integrations/source_version_control.html 参照
        # It is recommended to specify the latest version of Python
        # supported by your project here, or alternatively use
        # pre-commit's default_language_version, see
        # https://pre-commit.com/#top_level-default_language_version
        language_version: python3.10
  # mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.942
    hooks:
      - id: mypy
        args: [--strict]
  # flake8
  - repo: https://gitlab.com/pycqa/flake8
    rev: 4.0.1
    hooks:
      - id: flake8
        # max-line-length setting is the same as black
        # commit cannot be done when cyclomatic complexity is more than 10.
        args: [--ignore=E501]
  # pydocstyle https://www.pydocstyle.org/en/latest/usage.html#usage-with-the-pre-commit-git-hooks-framework
  # ドキュメント記述を強制する場合は有効だが、結構面倒だよね...
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.1.1  # pick a git hash / tag to point to. see https://github.com/PyCQA/pydocstyle/releases
    hooks:
      - id: pydocstyle
        args:
          # 以下のルールは排他のため、どちらか一方(もしくは両方)を無視する
          # D212 / D213 : モジュールの先頭ドキュメント
          # D203 / D211 : クラスドキュメント
          - --ignore=D212, D203
  # コメント付き json のフォーマットチェック
  - repo: https://gitlab.com/bmares/check-json5
    rev: v1.0.0
    hooks:
    - id: check-json5
